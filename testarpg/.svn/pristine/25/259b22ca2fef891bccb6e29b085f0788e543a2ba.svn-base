
module egret {

	export class Role extends ElementPlayer{
		
		private static _instance:Role = null;
		//当前场景
		private _scene:SceneDriver = null;
		
		/**
		 * 构造函数
		 */
		public constructor(){
			super();
			
			this.touchEnabled = false;
			this.touchChildren = false;
			this.isRole = true;
			
			this.updatePlayerVo();
		}
		
		public static getInstance():Role{
			return Role._instance || (Role._instance = new Role());
		}
		//
		/**
		 * 更新主角数据 
		 * 
		 */		
		public updatePlayerVo():void{
			var vo:UserInfoVo = dataManager().userData.userInfoVo;
			var playerVo:ScenePlayerVo = <ScenePlayerVo><any> (this._data.vo);
			if(!playerVo)
				playerVo = new ScenePlayerVo();
			
			playerVo.id = vo.id;
			playerVo.idString = vo.id + "";
			playerVo.name = vo.nickname;
			playerVo.sex = vo.sex;
			playerVo.vocation = vo.vocation;
			//playerVo.camp = vo.camp;
			
			playerVo.identityId = 1;//dataManager().roleInfoData.useItem.roleInfoVo.identityId;
			
			playerVo.x = this.x;
			playerVo.y = this.y;
			
			if(!this._data.vo)
				this.setData(playerVo);
		}
		//
		public updateAvatar(vo:SceneElementVo=null, lo:SceneElementLo=null):void{
			this.updatePlayerVo();
			
			super.updateAvatar(vo,lo);
		}
		//
		/**
		 * 设置主角坐标数据 
		 * @param x:int x坐标
		 * @param y:int y坐标
		 * 
		 */		
		public setRoleXY(x:number,y:number = 0):void{
			this.data.vo.x = x;
			this.data.vo.y = y;
			this.x = x;
			this.y = y;
		}
		//
		/**
		 * 主角移动至坐标 
		 * @param x:Number
		 * @param y:Number
		 * 
		 */		
		public moveTo(x:number,y:number,isCheckPart:boolean = true):void{
			if(!this._scene) return;
			
			super.moveTo(x,y,isCheckPart);
		}
		//
		/**
		 * 显示主角 
		 * @param scene:SceneDriver 场景
		 * @param x:Number x 坐标
		 * @param y:Number y 坐标
		 * 
		 */		
		public showPlayer(scene:SceneDriver,x:number,y:number,scaleX:number = 1,scaleY:number = 1):void{
			if(scene && this._scene == scene){
				this.setXY(x,y);
			}else{
				this._scene = scene;
				this._scene.addElement(this,SceneLayerType.BIOLOGY,x,y);
			}
			
			this.touchEnabled = false;
			this.touchChildren = false;
			
			this.stopMove();
			this.play(-1,ActionType.PREPARE,ActionMovieClipDirectionType.UP);
			
			//TimerManager.getInstance().addExecute(this.checkScale,500,[scaleX,scaleY],1);
			
//			Pet.getInstance().showPet(_scene,x,y);
		}
		
		private checkScale(scaleX:number = 1,scaleY:number = 1):void{
			//if(this.scaleX != scaleX || this.scaleY != scaleY){
			//	TweenLite.to(this,0.3,{scaleX:scaleX,scaleY:scaleY});
			//}
		}
		//
		/**
		 * 移除主角 
		 * 
		 */		
		public hidePlayer():void{
			if(this._scene){
				this.stopMove();
				this._scene.removeElement(this,false);
				this._scene = null;
			}
		}
		//
		/**
		 * 场景切换 
		 * 
		 */		
		public changeScene(scene:SceneDriver):void{
			if(scene != this._scene) return;
			
			this.clearFollowPoints();
			this.stopMove();
		}
	}
}