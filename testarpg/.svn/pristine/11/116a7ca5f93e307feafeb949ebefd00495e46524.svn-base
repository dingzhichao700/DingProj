var egret;
(function (egret) {
    var ElementPlayer = (function (_super) {
        __extends(ElementPlayer, _super);
        /**
         * 构造函数
         */
        function ElementPlayer() {
            _super.call(this);
            //美浓攻略阵营图标
            this._imageSiege = null;
            //动作类型
            this._actionType = 0;
        }
        var __egretProto__ = ElementPlayer.prototype;
        //
        /**
         * 更新动作影片显示
         * @param vo:SceneElementVo
         * @param lo:SceneElementLo
         *
         */
        __egretProto__.updateAvatar = function (vo, lo) {
            if (vo === void 0) { vo = null; }
            if (lo === void 0) { lo = null; }
            if (!vo)
                vo = this._data.vo;
            if (!lo)
                lo = this._data.lo;
            var playerVo = vo;
            //var identityLo:IdentityLo = LocalData.getInstance().getIdentityLo(playerVo.identityId);
            //var flag:boolean = this._actionType != identityLo.actionType;
            var flag = true;
            this.setData(vo, lo);
            if (flag) {
                this._avatar.clear();
                this.play();
            }
        };
        //
        /**
         * 设置场景元素数据
         * @param vo:SceneElementVo 元素数据
         * @param lo:SceneElementLo 表数据
         *
         */
        __egretProto__.setData = function (vo, lo) {
            if (vo === void 0) { vo = null; }
            if (lo === void 0) { lo = null; }
            _super.prototype.setData.call(this, vo, lo);
            var playerVo = vo;
            //var identityLo:IdentityLo = LocalData.getInstance().getIdentityLo(playerVo.identityId);
            //this._actionType = identityLo.actionType;
            this._actionType = egret.ActionType.PREPARE;
            egret.SceneElementData.getInstance().setSceneAvatarVoPlayer(this._sceneAvatarVo, playerVo.vocation, playerVo.sex, playerVo.mountsState, playerVo.bodyLevel, playerVo.weaponLevel, playerVo.wingLevel, playerVo.mountsLevel);
        };
        /**
         * 按指定动作类型和方向播放影片
         * @param frameIndex:int = -1 开始播放的帧索引，-1时不设置开始播放的帧索引，从当前帧开始播放或从第0帧开始播放
         * @param actionType:int = -1 动作类型，-1时不设置
         * @param direction:int = -1 动作方向，-1时不设置
         * @param loopCount:int = 0  播放循环次数，播放至最后一帧时即算循环了一次，0表示无限循环
         *
         */
        __egretProto__.play = function (frameIndex, actionType, direction, loopCount) {
            if (frameIndex === void 0) { frameIndex = -1; }
            if (actionType === void 0) { actionType = -1; }
            if (direction === void 0) { direction = -1; }
            if (loopCount === void 0) { loopCount = 0; }
            if (this._isDestroy)
                return;
            if (!this._sceneAvatarVo.body)
                return;
            var partTypes = null;
            if ((this._data.vo).mountsState == egret.MountedType.NONE) {
                //				partTypes = ActionPartType.TYPES_BODY_ONLY;
                partTypes = egret.ActionPartType.TYPES_NORMAL;
            }
            else {
                partTypes = egret.ActionPartType.TYPES;
                //飞行状态，待机与行走一样
                if ((this._data.vo).mountsState == egret.MountedType.FLYED) {
                    actionType = egret.ActionType.PREPARE;
                }
            }
            //先播放，以设置动作类型和方向
            this._avatar.play(frameIndex, actionType, direction, loopCount);
            this._avatar.setPartTypes(partTypes, this.getPartUrl, this, this.loadActionComplete, this);
            this._namePad.y = this._avatar.topLineY;
        };
        //
        __egretProto__.update = function () {
            _super.prototype.update.call(this);
        };
        //
        /**
         * 显示或隐藏美浓攻略图标
         * @param visible:Boolean 是否显示
         *
         */
        __egretProto__.showSiegeIcon = function (visible) {
            if (visible) {
                if (!this._imageSiege) {
                    this._imageSiege = new egret.Image(null, 30, 30);
                }
                this._namePad.show(this._imageSiege, 0, 0);
            }
            else if (this._imageSiege) {
                this._namePad.hide(this._imageSiege);
            }
        };
        //
        /**
         * 获取部件影片地址
         * @param partType:String ActionPartType 动作影片类型
         * @return
         */
        __egretProto__.getPartUrl = function (partType) {
            var path = null;
            if (partType == egret.ActionPartType.BODY) {
                path = egret.PathData.PATH_MOVIES_PLAYER;
            }
            else {
                if (partType == egret.ActionPartType.WEAPON) {
                    path = egret.PathData.PATH_MOVIES_WEAPON;
                }
                else if (partType == egret.ActionPartType.WING) {
                    path = egret.PathData.PATH_MOVIES_WING;
                }
                else if (partType == egret.ActionPartType.MOUNTS) {
                    path = egret.PathData.PATH_MOVIES_MOUNTS;
                }
            }
            var movie = this._sceneAvatarVo[partType];
            //若动作影片改变时，只需要改变
            //_data.lo.movieName的值即可
            var url = egret.dataManager().sceneElementData.getActionUrl(path, movie, this._avatar.actionType);
            return url;
        };
        return ElementPlayer;
    })(egret.SceneElementDriver);
    egret.ElementPlayer = ElementPlayer;
    ElementPlayer.prototype.__class__ = "egret.ElementPlayer";
})(egret || (egret = {}));
//# sourceMappingURL=ElementPlayer.js.map