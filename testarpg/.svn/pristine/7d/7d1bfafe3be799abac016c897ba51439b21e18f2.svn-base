
module egret {

	export class ElementPlayer extends SceneElementDriver{
		//美浓攻略阵营图标
		private _imageSiege:Image = null;
		//动作类型
		private _actionType:number = 0;
		
		/**
		 * 构造函数
		 */
		public constructor(){
			super();
		}
		//
		/**
		 * 更新动作影片显示
		 * @param vo:SceneElementVo
		 * @param lo:SceneElementLo
		 * 
		 */		
		public updateAvatar(vo:SceneElementVo = null,lo:SceneElementLo = null):void{
			if(!vo)
				vo = this._data.vo;
			if(!lo)
				lo = this._data.lo;
			
			var playerVo:ScenePlayerVo = <ScenePlayerVo><any> vo;
			//var identityLo:IdentityLo = LocalData.getInstance().getIdentityLo(playerVo.identityId);
			//var flag:boolean = this._actionType != identityLo.actionType;
			var flag:boolean = true;

			this.setData(vo,lo);
			
			if(flag){
				this._avatar.clear();
				this.play();
			}
		}
		//
		/**
		 * 设置场景元素数据 
		 * @param vo:SceneElementVo 元素数据
		 * @param lo:SceneElementLo 表数据
		 * 
		 */		
		public setData(vo:SceneElementVo = null,lo:SceneElementLo = null):void{
			super.setData(vo,lo);
			
			var playerVo:ScenePlayerVo = <ScenePlayerVo><any> vo;
			//var identityLo:IdentityLo = LocalData.getInstance().getIdentityLo(playerVo.identityId);
			
			//this._actionType = identityLo.actionType;
			this._actionType = ActionType.PREPARE;
			
			SceneElementData.getInstance().setSceneAvatarVoPlayer(this._sceneAvatarVo,
					playerVo.vocation,playerVo.sex,playerVo.mountsState,playerVo.bodyLevel,
					playerVo.weaponLevel,playerVo.wingLevel,playerVo.mountsLevel);
		}
		/**
		 * 按指定动作类型和方向播放影片 
		 * @param frameIndex:int = -1 开始播放的帧索引，-1时不设置开始播放的帧索引，从当前帧开始播放或从第0帧开始播放
		 * @param actionType:int = -1 动作类型，-1时不设置
		 * @param direction:int = -1 动作方向，-1时不设置
		 * @param loopCount:int = 0  播放循环次数，播放至最后一帧时即算循环了一次，0表示无限循环
		 * 
		 */		
		public play(frameIndex:number = -1,actionType:number = -1,direction:number = -1,loopCount:number = 0):void{
			if(this._isDestroy) return;
			if(!this._sceneAvatarVo.body) return;
			
			var partTypes:Array<any> = null;
			if((<ScenePlayerVo><any> (this._data.vo)).mountsState == MountedType.NONE){
//				partTypes = ActionPartType.TYPES_BODY_ONLY;
				partTypes = ActionPartType.TYPES_NORMAL;
			}else{
				partTypes = ActionPartType.TYPES;
				
				//飞行状态，待机与行走一样
				if((<ScenePlayerVo><any> (this._data.vo)).mountsState == MountedType.FLYED){
					actionType = ActionType.PREPARE;
				}
			}
			
			//先播放，以设置动作类型和方向
			this._avatar.play(frameIndex,actionType,direction,loopCount);
			this._avatar.setPartTypes(partTypes,this.getPartUrl,this,this.loadActionComplete,this);
			
			this._namePad.y = this._avatar.topLineY;
		}
		//
		public update():void{
			super.update();
		}
		//
		/**
		 * 显示或隐藏美浓攻略图标 
		 * @param visible:Boolean 是否显示
		 * 
		 */		
		public showSiegeIcon(visible:boolean):void{
			if(visible){
				if(!this._imageSiege){
					this._imageSiege = new Image(null,30,30);
//					DisplayObjectUtil.drawRectBorder(_imageSiege,30,30,0xff,1);
				}
				
				this._namePad.show(this._imageSiege,0,0);
				//this._imageSiege.url = dataManager().pathData.getResourceUrl(PathData.PATH_IMAGES_SIEGE,(<ScenePlayerVo><any> (this._data.vo)).camp + ".png");
			}else if(this._imageSiege){
				this._namePad.hide(this._imageSiege);
			}
		}
		//
		/**
		 * 获取部件影片地址 
		 * @param partType:String ActionPartType 动作影片类型
		 * @return
		 */		
		public getPartUrl(partType:string):string{
			var path:string = null;
			if(partType == ActionPartType.BODY){
				path = PathData.PATH_MOVIES_PLAYER;
			}else{
				if(partType == ActionPartType.WEAPON){
					path = PathData.PATH_MOVIES_WEAPON;
				}else if(partType == ActionPartType.WING){
					path = PathData.PATH_MOVIES_WING;
				}else if(partType == ActionPartType.MOUNTS){
					path = PathData.PATH_MOVIES_MOUNTS;
				}
			}
			
			var movie:string = this._sceneAvatarVo[partType];
			
			//若动作影片改变时，只需要改变
			//_data.lo.movieName的值即可
			var url:string = dataManager().sceneElementData.getActionUrl(path,movie,this._avatar.actionType);
			
			return url;
		}
	}
}