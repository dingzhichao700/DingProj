
module egret {

	export class SceneElementManager{
		private static _instance:SceneElementManager = null;
		
		private static ELEMENT_PLAYER:string = "ElementPlayer";
		private static ELEMENT_MONSTER:string = "ElementMonster";
		private static ELEMENT_NPC:string = "ElementNpc";
		private static ELEMENT_PET:string = "ElementPet";
		private static ELEMENT_POINT:string = "ElementEntryPoint";
		private static ELEMENT_CITY:string = "ElementCity";
		private static ELEMENT_NPC_SIEGE:string = "ElementNpcSiege";
		private static ELEMENT_NPC_BUILD:string = "ElementNpcBuild";
		private static ELEMENT_COLLECT_GOODS:string = "ElementCollectGoods";
		
		//场景元素缓存数量配置
		private COUNT_ELEMENT_CACHE:any = {
			ElementPlayer:1000,
			ElementMonster:6,
			ElementNpc:100,
			ElementPet:1000,
			ElementEntryPoint:20,
			ElementCity:50,
			ElementNpcSiege:6,
			ElementNpcBuild:4,
			ElementCollectGoods:10
		};
		
		//场景元素缓存 
		private _elementCache:HashMap = null;
		//标记场景元素是否已回收
		private _elementFlagMap:HashMap = null;
		
		//场景数据
		private _sceneData:SceneData = null;
		/**
		 * 构造函数
		 */
		public constructor(){
			this._elementCache = new HashMap();
			this._elementFlagMap = new HashMap();
			
			this._sceneData = dataManager().sceneData;
		}

		public static getInstance():SceneElementManager{
            if(!SceneElementManager._instance)
                SceneElementManager._instance = new SceneElementManager();
			return SceneElementManager._instance;
		}
		//
		/**
		 * 获取场景元素实例，并缓存
		 * @param cls:Class:Class 场景元素类
		 * @return 
		 * 
		 */		
		public getElement(cls:any):SceneElement{
			var array:Array<any> = this.getElementCacheArray(this.getElementType2(cls));
			
			var element:SceneElement = null;
			
			if(array.length > 0){
				element = array.pop();
				
				this._elementFlagMap.remove(element);
			}else{
				element = new cls();
			}
			
			return element;
		}
		//
		/**
		 * 回收场景元素 
		 * @param element:SceneElement
		 * 
		 */		
		public recoverElement(element:SceneElement):void{
			if(!element){
				LogManager.error(this,"回收场景元素element为空");
				return;
			}
			if(this._elementFlagMap.containsKey(element)){
				LogManager.error(this,"重复回收场景元素:element = " + element + ",id = " + element.id);
				return;
			}
			if(element == Role.getInstance()){
				//主角，宠物等不用回收
				return;
			}
			
			var type:string = this.getElementType(element);
			var array:Array<any> = this.getElementCacheArray(type);
			if(!this.COUNT_ELEMENT_CACHE[type]){
				LogManager.error(this,"未配置场景元素缓存数量 type = " + type);
				
				//测试
				throw new Error("未配置场景元素缓存数量 type = " + type);
			}
			
			if(array.length < this.COUNT_ELEMENT_CACHE[type]){
				array.push(element);
				
				this._elementFlagMap.put(element,true);
			}else{
				var index:number = array.indexOf(element);
				if(index != -1)
					array.splice(index,1);
				this._elementFlagMap.remove(element);
				element.destroy();
			}
		}
		//
		/**
		 * 获取场景元素缓存 
		 * @param element:*
		 * @return 
		 * 
		 */		
		private getElementCacheArray(type:string):Array<any>{
			var array:Array<any> = this._elementCache.get(type);
			
			if(!array){
				array = [];
				this._elementCache.put(type,array);
			}
			
			return array;
		}
		//
		/**
		 * 根据场景元素实例获取类型 
		 * @param target:* 场景元素实例
		 * @return 
		 * 
		 */		
		private getElementType(target:any):string{
			var type:string = null;
			
			if(target instanceof ElementPlayer){
				type = SceneElementManager.ELEMENT_PLAYER;
			}else if(target instanceof ElementMonster){
				type = SceneElementManager.ELEMENT_MONSTER;
			}else if(target instanceof ElementNpc){
				type = SceneElementManager.ELEMENT_NPC;
			}else if(target instanceof ElementPet){
				type = SceneElementManager.ELEMENT_PET;
			}else if(target instanceof ElementEntryPoint){
				type = SceneElementManager.ELEMENT_POINT;
			}else if(target instanceof ElementCollectGoods){
				type = SceneElementManager.ELEMENT_COLLECT_GOODS;
			}
			
			return type;
		}
		//
		/**
		 * 根据场景元素类获取类型 
		 * @param cls:* 场景元素类
		 * @return 
		 * 
		 */		
		private getElementType2(cls:any):string{
			var type:string = null;
			
			if(cls == ElementPlayer){
				type = SceneElementManager.ELEMENT_PLAYER;
			}else if(cls == ElementMonster){
				type = SceneElementManager.ELEMENT_MONSTER;
			}else if(cls == ElementNpc){
				type = SceneElementManager.ELEMENT_NPC;
			}else if(cls == ElementPet){
				type = SceneElementManager.ELEMENT_PET;
			}else if(cls == ElementEntryPoint){
				type = SceneElementManager.ELEMENT_POINT;
			}else if(cls == ElementCollectGoods){
				type = SceneElementManager.ELEMENT_COLLECT_GOODS;
			}
			
			return type;
		}
	}
}